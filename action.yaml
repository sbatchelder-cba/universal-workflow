apiVersion: automation.cloudbees.io/v1alpha1
kind: action
name: 'UniversalWorkflow'
description: 'The Universal Workflow'

inputs:
  CONFIG_FILE:
    description: 'asdf'
    default: ''
  KANIKO-TOKEN:
    required: true
    default: ''
  SONARQUBE-TOKEN:
    required: true
    default: ''
runs:
  using: composite
  steps:
    # Build Phase
    - id: code-checkout
      name: Check out repo
      kind: build
      uses: cloudbees-io/checkout@v1
      with:
        provider: ${{ cloudbees.scm.provider }}
        repository: ${{ cloudbees.scm.repository }}

    # Right now, the app name, app1-ui is coded in. Need to make the config
    # file more agnostic or account for the name.
    - name: Read config.yaml
      id: readconfig
      kind: build
      uses: docker://python:3.12-alpine3.19
      shell: sh
      run: |
        pwd ; ls -la
        apk add yq
        yq '.cb-platform.component.[0].context' ${{ inputs.CONFIG_FILE }} | tr -d '\n' > "$CLOUDBEES_OUTPUTS/CONTEXT"
        yq '.cb-platform.component.[0].mvn-compile-args' ${{ inputs.CONFIG_FILE }} | tr -d '\n' > "$CLOUDBEES_OUTPUTS/MVN-COMPILE-ARGS"
        yq '.cb-platform.component.[0].mvn-test-args' ${{ inputs.CONFIG_FILE }} | tr -d '\n' > "$CLOUDBEES_OUTPUTS/MVN-TEST-ARGS"
        yq '.cb-platform.component.[0].sq-project-key' ${{ inputs.CONFIG_FILE }} | tr -d '\n' > "$CLOUDBEES_OUTPUTS/SQ-PROJECT-KEY"
        yq '.cb-platform.component.[0].artifact-destination' ${{ inputs.CONFIG_FILE }} | tr -d '\n' > "$CLOUDBEES_OUTPUTS/ARTIFACT-DESTINATION"
        yq '.cb-platform.component.[0].kaniko-build-args' ${{ inputs.CONFIG_FILE }} | tr -d '\n' > "$CLOUDBEES_OUTPUTS/KANIKO-BUILD-ARGS"
        yq '.cb-platform.component.[0].kaniko-labels' ${{ inputs.CONFIG_FILE }} | tr -d '\n' > "$CLOUDBEES_OUTPUTS/KANIKO-LABELS"
        yq '.cb-platform.component.[0].dockerfile' ${{ inputs.CONFIG_FILE }} | tr -d '\n' > "$CLOUDBEES_OUTPUTS/DOCKERFILE"


    - id: ci-maven3_9
      #if: ${{ inputs.MVN-COMPILE-ARGS == '' }}
      if: ${{ steps.readconfig.outputs.MVN-COMPILE-ARGS != '' }}
      uses: sbatchelder-cba/ci-maven-3.9@v0.0.3
      with:
        # context: ${{ inputs.CONTEXT }}
        context: ${{ steps.readconfig.outputs.CONTEXT }}
        mvn-compile-args: ${{ steps.readconfig.outputs.MVN-COMPILE-ARGS }}
        mvn-test-args: ${{ steps.readconfig.outputs.MVN-TEST-ARGS }}

    # custom action is evaluated before the conditional; must exist before stubbing
    # - id: ci-gradle
    #   if: ${{ inputs.GRADLE-BUILD-ARGS != '' }}
    #   uses: sbatchelder-cba/ci-gradle@v0.0.1
    #   with:
    #     context: ${{ inputs.CONTEXT }}
    #     gradle-build-args: ${{ inputs.GRADLE-BUILD-ARGS }}
    #     gradle-test-args: ${{ inputs.GRADLE-TEST-ARGS }}

    # Analysis Phase

    # - id: sonarqube
    #   if: ${{ inputs.SQ-PROJECT-KEY != '' }}
    #   uses: cloudbees-io/sonarqube-sast-scan-code@v1
    #   with:
    #     server-url: "https://sonarqube.cb-demos.io"
    #     username: "admin"
    #     password: ${{ inputs.SONARQUBE-TOKEN }}
    #     # Java is not supported yet
    #     language: "LANGUAGE_GO"
    - id: sonarqube
      if: ${{ steps.readconfig.outputs.SQ-PROJECT-KEY != '' }}
      uses: sbatchelder-cba/sonarqube-cba@v0.0.3
      with:
        sources: ${{ steps.readconfig.outputs.CONTEXT }}
        project-key: ${{ steps.readconfig.outputs.SQ-PROJECT-KEY }}
        host-url: "https://sonarqube.cb-demos.io"
        token: ${{ inputs.SONARQUBE-TOKEN }}

    # - name: Coverity Scan
    #   if: ${{ vars.coverityScan == true }
    #   uses: cloudbees-io/coverity
    #   with:

    # - name: Black Duck Scan
    #   if: ${{ vars.blackduckScan == true }
    #   uses: sbatchelder-cba/blackduck@v0.0.1
    #   with:

    - name: Log in to OCI registry
      uses: cloudbees-io/configure-oci-credentials@v1
      with:
        registry: docker.io
        username: sbatchelder@cloudbees.com
        password: ${{ inputs.KANIKO-TOKEN }}

    - id: kaniko
      name: Upload via Kaniko
      uses: cloudbees-io/kaniko@v1
      with:
          dockerfile: ${{ steps.readconfig.outputs.DOCKERFILE }}
          context: ${{ steps.readconfig.outputs.CONTEXT }}
          destination: ${{ steps.readconfig.outputs.ARTIFACT-DESTINATION }}
          build-args: ${{ steps.readconfig.outputs.KANIKO-BUILD-ARGS }}
          labels: ${{ steps.readconfig.outputs.KANIKO-LABELS }}
